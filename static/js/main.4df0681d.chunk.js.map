{"version":3,"sources":["componets/Header.js","store/constants/constants.js","componets/FlexSideBar.js","store/actions/flexGenActions.js","componets/Main.js","componets/Footer.js","App.js","store/store.js","store/reducers/flexGenReducers.js","reportWebVitals.js","index.js"],"names":["Header","className","href","FLEXGEN_ROWS","FLEXGEN_COLUMNS","FLEXGEN_HTML","FLEXGEN_CSS","FlexSideBar","dispatch","useDispatch","useSelector","state","flexGen","rows","cols","html","css","qRow","val","arr","i","type","payload","flexGenRows","qCol","length","ind","obj","flexGenCols","getCode","evt","preventDefault","col","j","code","flexGenCss","defaultValue","onInput","e","target","value","map","k","onClick","language","style","a11yLight","Main","row","Object","values","Footer","App","reducers","combineReducers","0","action","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4df0681d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"App-header bg-dark text-white pt-2\">\r\n            <h4 className=\"px-3\">Markup Generator</h4>\r\n            <ul className=\"nav nav-tabs  \">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active bg-secondary text-white border-secondary\" href=\"#\">Flex</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-white \" href=\"#\">Grid</a>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const FLEXGEN_ROWS = 'FLEXGEN_ROWS'\r\nexport const FLEXGEN_COLUMNS = 'FLEXGEN_COLUMNS'\r\nexport const FLEXGEN_HTML = 'FLEXGEN_HTML'\r\nexport const FLEXGEN_CSS = 'FLEXGEN_CSS'\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport {a11yLight} from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport {flexGenCols, flexGenCss, flexGenHtml, flexGenRows} from '../store/actions/flexGenActions'\r\n\r\nconst FlexSideBar = () => {\r\n    const dispatch = useDispatch()\r\n    const {rows, cols, html, css} = useSelector(state => state.flexGen)\r\n    const qRow = (val) => {\r\n        let arr = []\r\n        for (let i = 0; i < val; i++) {\r\n            arr[i] = i\r\n        }\r\n        val > 0 && dispatch(flexGenRows(arr))\r\n        val > 0 && qCol(1, arr.length - 1)\r\n    }\r\n    const qCol = (val, ind) => {\r\n        let obj = cols\r\n        let arr = []\r\n        for (let i = 0; i < val; i++) {\r\n            arr[i] = i\r\n        }\r\n        obj[ind] = arr\r\n        val > 0 && dispatch(flexGenCols(obj))\r\n    }\r\n\r\n    const getCode = (evt) => {\r\n        evt.preventDefault()\r\n        let html = ''\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let col = ''\r\n            for (let j = 0; j < cols[i].length; j++) {\r\n                col +=\r\n                    \"    <div class='col'>\\n\" +\r\n                    \"        col-\" + (+j + 1) + \"\\n\" +\r\n                    \"    </div>\\n\"\r\n            }\r\n            html += \"<div class='el-\" + (+i + 1) + \" row'>\\n\" +\r\n                \"   row-1\\n\" +\r\n                col +\r\n                \"</div>\"\r\n            if (i!==rows.length-1) html += \"\\n\"\r\n        }\r\n        dispatch(flexGenHtml(html))\r\n        const style =\r\n            \".container {\\n\" +\r\n            \"   display : flex;\\n\" +\r\n            \"}\\n\" +\r\n            \".row {\\n\" +\r\n            \"   flex-direction: row;\\n\" +\r\n            \"}\" +\r\n            \".col {\\n\" +\r\n            \"   flex-direction: column;\\n\" +\r\n            \"}\"\r\n        dispatch(flexGenCss(style))\r\n    }\r\n    return (\r\n        <aside className='p-2 bg-secondary text-white'>\r\n            <form>\r\n                <label className=\"form-label\">quantity of rows</label>\r\n                <input\r\n                    type='number'\r\n                    className=\"form-control mb-2 \"\r\n                    defaultValue={1}\r\n                    onInput={(e) => qRow(e.target.value)}>\r\n                </input>\r\n                {rows.map((k, i) => (\r\n                    <div key={k}>\r\n                        <label className=\"form-label\">quantity of columns in row-{i + 1}</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            defaultValue={1}\r\n                            onInput={(e) => qCol(e.target.value, i)}\r\n                        >\r\n                        </input>\r\n                    </div>))}\r\n                <button type=\"button\" className=\"btn btn-light mt-2\" onClick={(e) => getCode(e)}>Get Code</button>\r\n            </form>\r\n            {html && (<> HTML\r\n            <div className='bg-light text-dark'>\r\n                <SyntaxHighlighter language=\"htmlbars\" style={a11yLight}>\r\n                    {html}\r\n                </SyntaxHighlighter>\r\n            </div>\r\n            CSS\r\n            <div className='bg-light text-dark'>\r\n                <SyntaxHighlighter language=\"css\" style={a11yLight}>\r\n                    {css}\r\n                </SyntaxHighlighter>\r\n            </div></>)\r\n            }\r\n        </aside>\r\n    )\r\n}\r\nexport default FlexSideBar\r\n\r\n","import {FLEXGEN_COLUMNS, FLEXGEN_CSS, FLEXGEN_HTML, FLEXGEN_ROWS} from \"../constants/constants\";\r\n\r\n\r\nexport const flexGenRows = (qRow) => ({\r\n    type: FLEXGEN_ROWS,\r\n    payload: qRow\r\n})\r\nexport const flexGenCols = (qCol) => ({\r\n    type: FLEXGEN_COLUMNS,\r\n    payload: qCol\r\n})\r\nexport const flexGenHtml = (code) => ({\r\n    type: FLEXGEN_HTML,\r\n    payload: code\r\n})\r\nexport const flexGenCss = (code) => ({\r\n    type: FLEXGEN_CSS,\r\n    payload: code\r\n})\r\n","import React from 'react'\r\nimport { useSelector} from 'react-redux'\r\n\r\n\r\nconst Main = () => {\r\n    const { rows, cols } = useSelector(state => state.flexGen)\r\n\r\n\r\n    const row = (Object.values(rows).map((row, i) => (\r\n        <div className={`el${row} row bg-dark text-white border border-secondary rounded-1 p-2`} key={row}>\r\n            row-{i + 1}\r\n            {Object.values(cols[i]).map((col, i) => (\r\n                <div className={`col m-1 bg-secondary border border-secondary rounded-1`} key={col}>\r\n                    col-{i+1}\r\n                </div>))}\r\n        </div>\r\n    )))\r\n    return (\r\n        <main className='p-5'>\r\n            main\r\n            {row}\r\n        </main>\r\n    )\r\n}\r\nexport default Main\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='d-flex bg-dark text-white d-flex align-items-center justify-content-center'>\r\n            <span>Code and design by Yaroslav Shelekhan</span>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Header from \"./componets/Header\";\r\nimport FlexSideBar from \"./componets/FlexSideBar\";\r\nimport Main from './componets/Main';\r\nimport Footer from \"./componets/Footer\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className='cont w-auto m-0 p-0'>\r\n                <FlexSideBar/>\r\n                <Main/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers} from \"redux\";\r\nimport {flexGenReducers} from './reducers/flexGenReducers'\r\n\r\nconst reducers = combineReducers({\r\n    flexGen: flexGenReducers,\r\n})\r\n\r\nconst store = createStore(reducers,{})\r\n\r\nexport default store","import {FLEXGEN_COLUMNS, FLEXGEN_CSS, FLEXGEN_HTML, FLEXGEN_ROWS} from \"../constants/constants\"\r\n\r\nexport const flexGenReducers = (state = {rows:[\"1\"], cols:{0:[\"1\"]}, html:\"\", css:\"\"}, action) => {\r\n    switch (action.type) {\r\n        case FLEXGEN_ROWS:\r\n            return {...state, rows: action.payload}\r\n        case FLEXGEN_COLUMNS:\r\n            return {...state, cols: action.payload}\r\n        case FLEXGEN_HTML:\r\n            return {...state, html: action.payload}\r\n        case FLEXGEN_CSS:\r\n            return {...state, css: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}